g1 <- ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff",
linetype = "dashed"
)
g1
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff", #<<
linetype = "dashed" #<<
) +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE))
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff", #<<
linetype = "dashed" #<<
) +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "€",
caption = "Fuente: Elaboración propia a partir de ISTAC",
color = "blue"
)
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff", #<<
linetype = "dashed" #<<
) +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "€",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000), #<<
mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff",
linetype = "dashed"
) +
scale_x_date(date_breaks = "1 quarter", date_labels = "%Q") +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",", #<<
scientific = FALSE)) + #<<
labs( #<<
title = "Gasto turístico en Canarias", #<<
x = "", #<<
y = "Millones de €", #<<
caption = "Fuente: Elaboración propia a partir de ISTAC" #<<
) #<<
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000), #<<
mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#0000ff",
linetype = "dashed"
) +
scale_x_date(date_breaks = "3 months", date_labels = "%Q") +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",", #<<
scientific = FALSE)) + #<<
labs( #<<
title = "Gasto turístico en Canarias", #<<
x = "", #<<
y = "Millones de €", #<<
caption = "Fuente: Elaboración propia a partir de ISTAC" #<<
) #<<
g1 +
theme(panel.background = element_blank(),
axis.ticks = element_blank())
g1 +
theme(panel.background = element_blank())
g1 +
theme_classic()
g1 +
ggthemes::theme_stata()
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#0000ff", linetype = "dashed") +
ggthemes::theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#0000ff", linetype = "line") +
ggthemes::theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#0000ff", linetype = "solid") +
ggthemes::theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
# geom_line(color = "#0000ff", linetype = "solid") +
ggthemes::theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line() +
# geom_line(color = "#0000ff", linetype = "solid") +
ggthemes::theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#0000ff", linetype = "solid") +
theme(
panel.background = element_blank(),
axis.ticks = element_blank()
) +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#000000", linetype = "solid") +
theme_bw() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#000000", linetype = "solid") +
theme_classic() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#000000", linetype = "solid") +
theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
library(ggthemes)
ggplot(data = df.trimestral %>%
mutate(valor = valor / 1000000),
mapping = aes(x = fecha, y = valor))  +
geom_line(color = "#000000", linetype = "solid") +
theme_stata() +
scale_y_continuous(labels = function(x) format(x, big.mark = ".", decimal.mark = ",",
scientific = FALSE)) +
labs(
title = "Gasto turístico en Canarias",
x = "",
y = "Millones de €",
caption = "Fuente: Elaboración propia a partir de ISTAC"
)
help.search(“geom_”, package = “ggplot2”)
help.search("geom_", package = "ggplot2")
devtools::install.github("rOpenSpain/istacbaser")
install.packages("devtools")
devtools::install.github("rOpenSpain/istacbaser")
devtools::install_github("ropenspain/istacbaser")
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
install.packages("remotes")
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
pagedown::chrome_print("index.html",output="Introducción al análisis de datos con R.pdf")
library(tidyverse)
x <- 4
x
numerico <- 3.4
entero <- 3L
complejo <- 3i
logico <- TRUE
fecha <- as.Date("2020-01-01")
class(x = numerico)
vnum <- c(1,2,3)
vlog <- c(TRUE,FALSE,TRUE)
vchar <- c("curso","de","R")
class(vnum)
class(vlog)
class(vchar)
length(vnum)
vec1 <- c(1,4,5,3)
vec2 <- 1:4 # es equivalente a c(1,2,3,4) o seq(1,4,1)
vec12 <- c(vec1, vec2)
vec12
vec1 + 2
vec1 * 2
vec1 + vec2
vec1 < vec2
paste(vchar, vec1)
paste(vchar, collapse = " ")
vec1 <- 1:7
vec1[1]
# asignamos un nombre a cada elemento del vector
names(vec1) <- c("lunes", "martes", "miercoles",
"jueves", "viernes", "sabado", "domingo")
vec1[c("miercoles")]
vec1[vec1 < 5]
matriz1 <- matrix(data = 1:9, nrow = 3, ncol = 3, byrow = TRUE)
# Ordenados por columnas
# matriz1 <- matrix(data = 1:9, nrow = 3, ncol = 3, byrow = FALSE)
matriz1
class(matriz1)
matriz1 <- matrix(data = 1:9, nrow = 3, byrow = TRUE)
matriz1
dim(matriz1)
rbind(matriz1, 1:3)
cbind(matriz1, 1:3)
rownames(matriz1) <- paste("fila", 1:3)
colnames(matriz1) <- paste("columna", 1:3)
matriz1
matriz1 + 2
matriz1 * matriz1
matriz1 %*% matriz1
rowSums(matriz1)
colSums(matriz1)
apply(matriz1, 1, prod)
apply(matriz1, 2, prod)
matriz1[2,3]
matriz1[2,1:3]
matriz1["fila 1", "columna 1"]
matriz1["fila 1", paste("columna", 1:2)]
sexo <- factor(c("Hombre", "Mujer", "Hombre", "Mujer"))
sexo
estudios <- factor(c("primarios", "secundarios", "superiores",
"superiores", "secundarios", "primarios"),
ordered = TRUE,
levels = c("primarios", "secundarios", "superiores"))
estudios
estudios[1] > estudios[2]
lista1 <- list(vector = vec1, matriz = matriz1,
factor.no.ordenado = sexo, factor.ordenado = estudios)
str(lista1) # muestra la estructura
lista1$vector
lista1[[1]]
lista1[["vector"]]
lista1$vector[1]
lista1$vector[1:2]
lista1$vector + 1
colSums(lista1$matriz)
id <- 1:5
ola <- c(rep("T1",3), rep("T2", 2))
sexo <- factor(c('Hombre', 'Mujer', 'Mujer', 'Mujer', 'Hombre'))
ingresos <- c(1500,2300,1700,900,2100)
residente <- c(TRUE, TRUE, TRUE, FALSE, TRUE)
isla <- c("Gran Canaria","Tenerife", "Tenerife", NA, "Gran Canaria")
encuesta <- data.frame(id, ola, sexo, ingresos, residente, isla, stringsAsFactors = FALSE)
encuesta
str(encuesta)
# encuesta["sexo"]
encuesta$sexo
# encuesta[c(1,2,3)]
encuesta[c("sexo", "ingresos", "residente")]
encuesta[1:2, 2:3]
encuesta[encuesta$ingresos > 2000, ]
ingresos2 <- encuesta$ingresos * 2
ingresos2
encuesta2 <- encuesta
encuesta2$ingresos <- ingresos2
encuesta2
x <- -1
if(x < 0) {
print("El valor de x es negativo")
}
x <- 1
if(x < 0) {
print("El valor de x es negativo")
} else {
print("El valor de x es positivo")
}
x <- 0
if(x < 0) {
print("El valor de x es negativo")
} else if (x > 0) {
print("El valor de x es positivo")
} else {
print("El valor de x es 0")
}
x <- 0
for (i in 1:10) {
x <- x + i
print(x)
}
x <- 0
while (x < 5) {
x <- x + 1
print(x)
}
f_suma <- function(x, y) {x + y}
f_suma(1, 2)
f_suma_positivos <- function(x, y) {
if(any(c(x,y) < 0)) {
print("Introduzca valores positivos")
} else {
x + y
}
}
f_suma_positivos(1, -2)
library(readr)
datos <- read_csv2("data/serie_gasto_istac.csv")
head(datos)
library(readxl)
datos <- read_excel("data/serie_gasto_istac.xlsx")
head(datos)
library(tidyverse)
data.frame(resultado = mean(1:4))
1:4 %>%
mean %>%
data.frame(resultado = .)
encuesta.filter <- filter(encuesta, residente == TRUE)
encuesta.arrange <- arrange(encuesta, desc(ingresos))
encuesta.rename <- rename(encuesta, "isla de residencia" = "isla")
encuesta.select <- select(encuesta, c("sexo", "ingresos", "isla"))
encuesta.mutate <- mutate(encuesta, ccaa = ifelse(residente == TRUE, "Canarias", "Otra CCAA"))
encuesta.summarise <- summarise(encuesta, ingreso.medio = mean(ingresos))
encuesta.group_by <- summarise(group_by(encuesta, isla), mean(ingresos))
df.largo <- data.frame(
poblacion = c(1000, 2000, 3000, 4000, 5000, 6000),
region = c("A", "A", "A", "B", "B", "B"),
periodo = c(rep(seq(1,3,1), 2))
)
df.ancho <- pivot_wider(df.largo, id_cols = region,
names_from = "periodo", names_prefix = "periodo_", values_from = "poblacion")
df.ancho
df.largo <- pivot_longer(df.ancho,
cols = c(starts_with("periodo")), names_to = "periodo",
names_prefix = "periodo_", values_to = "poblacion")
df.largo
df.microdatos.2019 <- read_csv2("data/GASTO_TURISTICO_2019.csv")
glimpse(df.microdatos.2019)
df.microdatos.2019 <- select(df.microdatos.2019, c("SEXO", "PAIS_RESIDENCIA", "EDAD", "NOCHES",
"PERSONAS_16_64", "PERSONAS_65_O_MAS",
"GASTO_EUROS", "COSTE_VUELOS_EUROS",
"COSTE_ALOJ_EUROS", "ISLA", "ALOJ_CATEG",
"ANTELACION_VIAJE", "TRIMESTRE", "PESO"))
glimpse(df.microdatos.2019)
df.disenyo.registro.sexo <- read_excel("data/Diseño de registro EGT 2018.xls",
sheet = "Sexo", skip = 1) %>%
select("code" = "CÓDIGOS", "label" = "ETIQUETA") %>%
filter(!is.na(code))
i.code <- match(df.microdatos.2019$SEXO, df.disenyo.registro.sexo$code)
df.microdatos.2019 <- df.microdatos.2019 %>%
mutate("SEXO" = as.factor(df.disenyo.registro.sexo$label[i.code]))
glimpse(df.microdatos.2019)
get_label <- function(var_variable, var_sheet, var_ruta, var_factor = FALSE) {
df.disenyo.registro.tmp <- read_excel(var_ruta, sheet = var_sheet, skip = 1) %>%
select("code" = "CÓDIGOS", "label" = "ETIQUETA") %>%
filter(!is.na(code))
i.code <- match(var_variable, df.disenyo.registro.tmp$code)
v.result <- df.disenyo.registro.tmp$label[i.code]
if(var_factor == TRUE) v.result <- as.factor(v.result)
return(v.result)
}
df.microdatos.2019 <- df.microdatos.2019 %>%
mutate(`PAIS_RESIDENCIA` = get_label(
var_variable = `PAIS_RESIDENCIA`,
var_sheet = "País2",
var_ruta = "data/Diseño de registro EGT 2018.xls")
)
glimpse(df.microdatos.2019)
df.microdatos.2019 <- df.microdatos.2019 %>%
mutate(`ISLA` = get_label(
var_variable = `ISLA`,
var_sheet = "Isla",
var_ruta = "data/Diseño de registro EGT 2018.xls")
)
glimpse(df.microdatos.2019)
df.microdatos.2019 %>%
group_by(SEXO) %>%
summarise(turistas.mas.16 = sum(PESO)) %>%
ungroup
df.microdatos.2019 %>%
mutate(gasto.total = GASTO_EUROS + COSTE_VUELOS_EUROS + COSTE_ALOJ_EUROS,
turistas.mas.16 = PERSONAS_16_64 + PERSONAS_65_O_MAS) %>%
group_by(ISLA) %>%
summarise(gasto.total = sum(gasto.total/turistas.mas.16*PESO)) %>%
ungroup
df.microdatos.2019 %>%
mutate(gasto.total = GASTO_EUROS + COSTE_VUELOS_EUROS + COSTE_ALOJ_EUROS,
turistas.mas.16 = PERSONAS_16_64 + PERSONAS_65_O_MAS) %>%
group_by(ISLA) %>%
summarise(turistas.mas.16.total = sum(PESO),
gasto.medio = sum(gasto.total/turistas.mas.16*PESO)/turistas.mas.16.total) %>%
ungroup
df.microdatos.2019 %>%
mutate(gasto.total = GASTO_EUROS + COSTE_VUELOS_EUROS + COSTE_ALOJ_EUROS,
turistas.mas.16 = PERSONAS_16_64 + PERSONAS_65_O_MAS) %>%
group_by(ISLA) %>%
summarise(turistas.mas.16.total = sum(PESO),
gasto.medio = sum(gasto.total/turistas.mas.16/NOCHES*PESO)/turistas.mas.16.total) %>%
ungroup
# devtools::install_github("ropenspain/istacbaser")
library(istacbaser)
busqueda.egt <- istacbase_search("egt", fields = "datos publicadosII")
df <- istacbase(busqueda.egt$ID[1], POSIXct = TRUE, freq = "trimestral")
df.trimestral <- filter(df,
Indicadores == "Valor absoluto" &
`Indicadores de gasto` == "GASTO TOTAL" &
`Países de residencia` == "TOTAL PAÍSES")
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line()
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#000000",
linetype = "solid"
) +
geom_point()
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#000000",
linetype = "solid"
) +
geom_point(color = "blue")
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
geom_line(
color = "#000000",
linetype = "solid"
) +
geom_point(color = "blue", size = 5)
ggplot(data = df.trimestral, mapping = aes(x = fecha, y = valor))  +
# geom_line(
# color = "#000000",
# linetype = "solid"
# )
geom_bar()
library(pagedown)
install.packages("pagedown")
pagedown::chrome_print("index.html", "Introducción al análisis de datos con R.pdf")
getwd()
busqueda.egt
busqueda.egt$ID
busqueda.egt$ID[1]
busqueda.egt$ID[title]
busqueda.egt$title[1]
busqueda.egt$titulo[1]
busqueda.egt$encuesta
View(busqueda.egt)
istacbase_search("frontur")
b1 <- istacbase_search("turistas")
View(b1)
b1$titulo[3]
b1 <- istacbase_search(""Turistas según lugares de residencia por sexo, grupos de edades y periodos."")
b1 <- istacbase_search("Turistas según lugares de residencia por sexo, grupos de edades y periodos.")
data <- istacbase(b1$ID)
View(data)
data <- istacbase(b1$ID, POSIXct = TRUE)
data <- istacbase(b1$ID, POSIXct = TRUE)
pagedown::chrome_print("index.html", "Introducción al análisis de datos con R.pdf")
pagedown::chrome_print("index.html", "Introducción al análisis de datos con R.pdf")
pagedown::chrome_print("index.html", "Introducción al análisis de datos con R.pdf")
